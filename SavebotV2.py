import webbrowser
from telegram import Bot
from telegram import ParseMode
from telegram import Update
from telegram import InlineKeyboardButton
from telegram import InlineKeyboardMarkup
from telegram import KeyboardButton
from telegram import ReplyKeyboardMarkup
from telegram import ReplyKeyboardRemove
from telegram.ext import CallbackContext
from telegram.ext import Updater
from telegram.ext import Filters
from telegram.ext import MessageHandler
from telegram.ext import CallbackQueryHandler
from telegram.ext import CommandHandler


button_zaim = '–ú–∏–∫—Ä–æ–∑–∞–π–º'
button_dcard = '–î–µ–±–µ—Ç–æ–≤–∞—è –∫–∞—Ä—Ç–∞'
button_ccard = '–ö—Ä–µ–¥–∏—Ç–Ω–∞—è –∫–∞—Ä—Ç–∞'
# –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ callback
# ZAIM
CALLBACK_BUTTON1_TURBO = "callback_button1"
CALLBACK_BUTTON2_GLAV = "callback_button2"
CALLBACK_BUTTON3_ZAIMER = "callback_button3"
CALLBACK_BUTTON4_WEBB = "callback_button4"
CALLBACK_BUTTON5_WEBZ = "callback_button5"
CALLBACK_BUTTON6_DOZP = "callback_button6"
CALLBACK_BUTTON7_SROCH = "callback_button7"
CALLBACK_BUTTON8_BOOS = "callback_button8"
CALLBACK_BUTTON9_VIVA = "callback_button9"
CALLBACK_BUTTON10_BACK = "callback_button10"
# DEB CARD
CB2_1_HOME = "callback_button2_1"
CB2_2_TINK = "callback_button2_2"
CB2_3_OPEN = "callback_button2_3"
CB2_4_ROK = "callback_button2_4"
# CRED CARD
CB3_1_ALFA = "callback_button3_1"
CB3_2_TINK = "callback_button3_2"
CB3_3_HOM = "callback_button3_3"
CB3_4_ROS = "callback_button3_4"
CB3_5_ROS2 = "callback_button3_5"
CB3_6_OPEN = "callback_button3_6"
CB3_7_SOV = "callback_button3_7"
CB3_8_HAL = "callback_buttom3_8"
# –ö–õ–ê–í–ê –ü–û–î –°–û–û–ë–©–ï–ù–ò–ï–ú –Ω–∞–∑–≤–∞–Ω–∏–µ
TITLES = {
    CALLBACK_BUTTON1_TURBO: "–¢–£–†–ë–û–ó–ê–ô–ú ‚úÖ",
    CALLBACK_BUTTON2_GLAV: "–ì–ª–∞–≤–∑–∞–π–º ‚úÖ",
    CALLBACK_BUTTON3_ZAIMER: "–ó–∞–π–º–µ—Ä ‚úÖ",
    CALLBACK_BUTTON4_WEBB: "Webbankir ‚úÖ",
    CALLBACK_BUTTON5_WEBZ: "–í–ï–ë-–ó–ê–ô–ú ‚úÖ",
    CALLBACK_BUTTON6_DOZP: "–î–æ–ó–∞—Ä–ø–ª–∞—Ç—ã ‚úÖ",
    CALLBACK_BUTTON7_SROCH: "–°—Ä–æ—á–Ω–æ–¥–µ–Ω—å–≥–∏ –æ–Ω–ª–∞–π–Ω ‚úÖ",
    CALLBACK_BUTTON8_BOOS: "Boostra ‚úÖ",
    CALLBACK_BUTTON9_VIVA: "VIVA –¥–µ–Ω—å–≥–∏ ‚úÖ",
    # D card
    CB2_1_HOME: "Home Credit - –¥–µ–±–µ—Ç–æ–≤–∞—è –∫–∞—Ä—Ç–∞ –ü–æ–ª—å–∑–∞ ‚ùå",
    CB2_2_TINK : "–¢–∏–Ω—å–∫–æ—Ñ—Ñ –ë–∞–Ω–∫ - Tinkoff Black üî∂",
    CB2_3_OPEN: "–ë–∞–Ω–∫ –û—Ç–∫—Ä—ã—Ç–∏–µ - –¥–µ–±–µ—Ç–æ–≤–∞—è –∫–∞—Ä—Ç–∞ üîµ",
    CB2_4_ROK: " –†–æ–∫–µ—Ç–±–∞–Ω–∫ - –†–æ–∫–µ—Ç–ö–∞—Ä—Ç–∞ üî∫",
    # c card
    CB3_1_ALFA: '–ê–ª—å—Ñ–∞–ë–∞–Ω–∫ - –∫—Ä–µ–¥–∏—Ç–Ω–∞—è –∫–∞—Ä—Ç–∞ "100 –¥–Ω–µ–π –±–µ–∑ %" üíØ',
    CB3_2_TINK: "–¢–∏–Ω—å–∫–æ—Ñ—Ñ –ë–∞–Ω–∫ - –∫—Ä–µ–¥–∏—Ç–Ω–∞—è –∫–∞—Ä—Ç–∞ ‚òë",
    CB3_3_HOM: 'Home Credit - –∫–∞—Ä—Ç–∞ —Ä–∞—Å—Å—Ä–æ—á–∫–∏ "–°–≤–æ–±–æ–¥–∞" ‚óº',
    CB3_4_ROS: "–†–û–°–ë–ê–ù–ö - –∫—Ä–µ–¥–∏—Ç–Ω–∞—è –∫–∞—Ä—Ç–∞ ¬´#120–ø–æ–¥–ù–û–õ–¨¬ª üî¥",
    CB3_5_ROS2: '–†–û–°–ë–ê–ù–ö - –∫—Ä–µ–¥–∏—Ç–Ω–∞—è –∫–∞—Ä—Ç–∞ "–ú–æ–∂–Ω–æ –í–°–Å!" ‚öú',
    CB3_6_OPEN: "–ë–∞–Ω–∫ –û—Ç–∫—Ä—ã—Ç–∏–µ - –ö—Ä–µ–¥–∏—Ç–Ω–∞—è –∫–∞—Ä—Ç–∞ 120 –¥–Ω–µ–π üåÄ",
    CB3_7_SOV: "–°–æ–≤–µ—Å—Ç—å - –∫–∞—Ä—Ç–∞ –±–µ—Å–ø—Ä–æ—Ü–µ–Ω—Ç–Ω–æ–π —Ä–∞—Å—Å—Ä–æ—á–∫–∏ ¬©",
    CB3_8_HAL: "–•–∞–ª–≤–∞ - –∫–∞—Ä—Ç–∞ —Ä–∞—Å—Å—Ä–æ—á–∫–∏ ‚≠ï",
}


def button_zaim_handler(update: Update, context: CallbackContext):
    update.message.reply_text(
        text='–≠—Ç–æ –∑–∞–π–º—ãüí∏',
        reply_markup=get_base_inline_keyboard(),
    )


def button_dcard_handler(update: Update, context: CallbackContext):
    update.message.reply_text(
        text='–≠—Ç–æ –¥–µ–±–µ—Ç–æ–≤—ã–µ –∫–∞—Ä—Ç—ãüí≥',
        reply_markup=get_base_inline_keyboard_2(),
    )


def button_ccard_handler(update: Update, context: CallbackContext):
    update.message.reply_text(
        text='–≠—Ç–æ –∫—Ä–µ–¥–∏—Ç–Ω—ã–µ –∫–∞—Ä—Ç—ãüí∞',
        reply_markup=get_base_inline_keyboard_3(),
    )


def message_handler(update: Update, context: CallbackContext):
    text = update.message.text
    if text == button_zaim:
        return button_zaim_handler(update=update, context=context)
    elif text == button_dcard:
        return button_dcard_handler(update=update, context=context)
    elif text == button_ccard:
        return button_ccard_handler(update=update, context=context)

    reply_markup = ReplyKeyboardMarkup(
        keyboard=[
            [
                KeyboardButton(text=button_zaim),
                KeyboardButton(text=button_dcard),
                KeyboardButton(text=button_ccard),
            ],
        ],
        resize_keyboard=True,
    )

    update.message.reply_text(
        text='–ü—Ä–∏–≤–µ—Ç, —è ZaimRu!\n–í—ã–±–µ—Ä–∏ —Ç–æ, —á—Ç–æ –Ω—É–∂–Ω–æ, –∏ —è –ø–æ–º–æ–≥—É',
        reply_markup=reply_markup,
    )


# –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º
def get_base_inline_keyboard():
    keyboard = [

        [
            InlineKeyboardButton(TITLES[CALLBACK_BUTTON1_TURBO], callback_data=CALLBACK_BUTTON1_TURBO),
        ],
        [    InlineKeyboardButton(TITLES[CALLBACK_BUTTON2_GLAV], callback_data=CALLBACK_BUTTON2_GLAV),

        ],
        [    InlineKeyboardButton(TITLES[CALLBACK_BUTTON3_ZAIMER], callback_data=CALLBACK_BUTTON3_ZAIMER),

        ],
        [
            InlineKeyboardButton(TITLES[CALLBACK_BUTTON4_WEBB], callback_data=CALLBACK_BUTTON4_WEBB),
        ],
        [
            InlineKeyboardButton(TITLES[CALLBACK_BUTTON5_WEBZ], callback_data=CALLBACK_BUTTON5_WEBZ),
        ],
        [
            InlineKeyboardButton(TITLES[CALLBACK_BUTTON6_DOZP], callback_data=CALLBACK_BUTTON6_DOZP),
        ],
        [
            InlineKeyboardButton(TITLES[CALLBACK_BUTTON7_SROCH], callback_data=CALLBACK_BUTTON7_SROCH),
        ],

        [
            InlineKeyboardButton(TITLES[CALLBACK_BUTTON8_BOOS], callback_data=CALLBACK_BUTTON8_BOOS),
        ],
        [
            InlineKeyboardButton(TITLES[CALLBACK_BUTTON9_VIVA], callback_data=CALLBACK_BUTTON9_VIVA),
        ],
    ]
    return InlineKeyboardMarkup(keyboard)

def get_base_inline_keyboard_2():
    keyboard = [
        [
          InlineKeyboardButton(TITLES[CB2_1_HOME], callback_data=CB2_1_HOME),
        ],
        [
          InlineKeyboardButton(TITLES[CB2_2_TINK], callback_data=CB2_2_TINK),
        ],
        [
          InlineKeyboardButton(TITLES[CB2_3_OPEN], callback_data=CB2_3_OPEN),
        ],
        [
          InlineKeyboardButton(TITLES[CB2_4_ROK], callback_data=CB2_4_ROK),
        ],
    ]
    return InlineKeyboardMarkup(keyboard)

def get_base_inline_keyboard_3():
    keyboard = [
        [
          InlineKeyboardButton(TITLES[CB3_1_ALFA], callback_data=CB3_1_ALFA),
        ],
        [  
          InlineKeyboardButton(TITLES[CB3_2_TINK], callback_data=CB3_2_TINK),
        ],
        [
          InlineKeyboardButton(TITLES[CB3_3_HOM], callback_data=CB3_3_HOM),
        ],
        [
          InlineKeyboardButton(TITLES[CB3_4_ROS], callback_data=CB3_4_ROS),
        ],
        [
          InlineKeyboardButton(TITLES[CB3_5_ROS2], callback_data=CB3_5_ROS2),
        ],
        [
          InlineKeyboardButton(TITLES[CB3_6_OPEN], callback_data=CB3_6_OPEN),
        ],
        [
          InlineKeyboardButton(TITLES[CB3_7_SOV], callback_data=CB3_7_SOV),
        ],
        [
          InlineKeyboardButton(TITLES[CB3_8_HAL], callback_data=CB3_8_HAL),
        ],
    ]
    return InlineKeyboardMarkup(keyboard)

# –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏–π keyboard
def keyboard_callback_handler(bot: Bot, update: Update, chat_data=None, **kwargs):
    query = update.callback_query
    data = query.data
    now = datetime.datetime.now()



    


def main():
    print('Start')
    updater = Updater(
        token='1058091115:AAE_kqsq0_w4UJdtgYO9rrUyZg_bhMqcrHE',
        use_context=True,
    )
    updater.dispatcher.add_handler(MessageHandler(filters=Filters.all, callback=message_handler))

    updater.start_polling()
    updater.idle()


if __name__ == '__main__':
    main()
